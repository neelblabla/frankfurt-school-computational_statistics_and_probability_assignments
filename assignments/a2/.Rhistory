library(rethinking)
library(dagitty)
dag_q1 <- dagitty('dag{ W <- A -> H -> W }')
drawdag( dag_q1 )
impliedConditionalIndependencies(dag_q1)
#There are no conditional independence, so there is no output to display
data(Howell1)
d <- Howell1
children <- d[ d$age < 13 , ]
plot( children$weight ~ children$age )
N <- 100
a <- rnorm( N , 12 , 4 )
b1 <- rlnorm( N , 0 , 1 )
# Prior predictive simulation for the weight and age model
plot( NULL , xlim=range(children$age) , ylim=c(-50,50) ,
xlab="age" , ylab="weight" )
abline( h=4 , lty=2, lwd=0.5 )
abline( h=35 , lty=2 , lwd=0.5 )
mtext( "log(b1) ~ dnorm(0,1)" )
xbar <- mean(children$age)
for ( i in 1:N ) curve( a[i] + b1[i]*(x - xbar) ,
from=min(children$age) , to=max(children$age) , add=TRUE ,
col=col.alpha("black",0.2) )
# Posterior distribution for weight and age model
xbar <- mean(children$age)
# fit model
m1a <- quap(
alist(
weight ~ dnorm( mu , sigma ) ,
mu <- a + exp(log_b1)*( age - xbar ) ,
a ~ dnorm( 12 , 4 ) ,
log_b1 ~ dnorm( 0 , 1 ) ,
sigma ~ dunif( 0 , 10 )
) ,
data=children )
precis( m1a )
# the marginal posterior distributions
round( vcov( m1a ) , 3 )
# the variance-covariance matrix
plot( weight ~ age , data=children , col=rangi2 )
post <- extract.samples( m1a )
a_map <- mean(post$a)
b1_map <- exp(mean(post$log_b1))
curve( a_map + b1_map*(x - xbar) , add=TRUE )
plot( children$weight ~ children$height )
N <- 100
a <- rnorm( N , 12 , 4)
b2 <- rlnorm( N , 0 , 1 )
# Prior predictive simulation for the weight and height model
plot( NULL , xlim=range(children$height) , ylim=c(-50,50) ,
xlab="height" , ylab="weight" )
abline( h=0 , lty=2, lwd=0.5 )
abline( h=35 , lty=2 , lwd=0.5 )
mtext( "log(b2) ~ dnorm(0,1)" )
xbar <- mean(children$height)
for ( i in 1:N ) curve( a[i] + b2[i]*(x - xbar) ,
from=min(children$height) , to=max(children$height) , add=TRUE ,
col=col.alpha("black",0.2) )
# Posterior distribution for weight and height model
xbar <- mean(children$height)
# fit model
m1b <- quap(
alist(
weight ~ dnorm( mu , sigma ) ,
mu <- a + exp(log_b2)*( height - xbar ) ,
a ~ dnorm( 12 , 4 ) ,
log_b2 ~ dnorm( 0 , 1 ) ,
sigma ~ dunif( 0 , 10 )
) ,
data=children )
precis( m1b )
# the marginal posterior distributions
round( vcov( m1b ) , 3 )
# the variance-covariance matrix
plot( weight ~ height , data=children , col=rangi2 )
post <- extract.samples( m1b )
a_map <- mean(post$a)
b2_map <- exp(mean(post$log_b2))
curve( a_map + b2_map*(x - xbar) , add=TRUE )
children$A <- scale( children$age )
children$H <- scale( children$height )
children$W <- scale( children$weight )
#fit models
m1_age <- quap(
alist(
W ~ dnorm( mu , sigma ) ,
mu <- a + bA * A ,
a ~ dnorm( 0 , 0.2 ) ,
bA ~ dnorm( 0 , 0.5 ) ,
sigma ~ dexp( 1 )
) , data = children )
m1_height <- quap(
alist(
W ~ dnorm( mu , sigma ) ,
mu <- a + bH * H ,
a ~ dnorm( 0 , 0.2 ) ,
bH ~ dnorm( 0 , 0.5 ) ,
sigma ~ dexp( 1 )
) , data = children )
m1_all <- quap(
alist(
W ~ dnorm( mu , sigma ) ,
mu <- a + bA*A + bH*H ,
a ~ dnorm( 0 , 0.2 ) ,
bA ~ dnorm( 0 , 0.5 ) ,
bH ~ dnorm( 0 , 0.5 ) ,
sigma ~ dexp( 1 )
) , data = children )
# Visualize results
precis( m1_all )
round( vcov( m1_all ) , 3 )
# the variance-covariance matrix
library(arulesViz)
library(raster)
library(Rgraphviz)
plot( coeftab(m1_age,m1_height,m1_all), par=c("bA","bH") )
data(Howell1)
d <- Howell1
children <- d[ d$age < 13 , ]
children$sex <- ifelse( children$male==1 , 2 , 1 )
str( children$sex )
# indexing --> now “1” means female and “2” means male
xbar <- mean(children$age)
# fit model
m2a <- quap(
alist(
weight ~ dnorm( mu , sigma ) ,
mu <- a[sex] + b[sex]*( age - xbar ) ,
a[sex] ~ dnorm( 4 , 1 ) ,
b[sex] ~ dlnorm( 0.5 , 1 ) ,
sigma ~ dunif( 0 , 10 )
) , data=children )
# plot data and both regression lines
plot( weight ~ age , data=children , col=c("red","blue")[children$sex])
post <- extract.samples( m2a )
a_map_girl <- mean(post$a[,1])
a_map_boy <- mean(post$a[,2])
b_map_girl <- mean(post$b[,1])
b_map_boy <- mean(post$b[,2])
curve( a_map_girl + b_map_girl*(x - xbar) , add=TRUE , col="pink")
curve( a_map_boy + b_map_boy*(x - xbar) , add=TRUE , col="blue")
legend(x = "topleft",
legend = c("girl", "boy"),
lty = c(1, 1),
col = c("pink", "blue"),
lwd = 2)
precis( m2a , depth=2 )
# the marginal posterior distributions
round( vcov( m2a ) , 3 )
# the variance-covariance matrix
# HINT: the following code can be adapted to make a posterior contrast plot
# contrast at each age, vector
seq <- 0:12
mu1 <- sim(m2a,data=list(age=seq,sex=rep(1,13)))
mu2 <- sim(m2a,data=list(age=seq,sex=rep(2,13)))
mu_contrast <- mu1
for ( i in 1:13 ) mu_contrast[,i] <- mu2[,i] - mu1[,i]
plot( x=seq, y=(colMeans(mu2)-colMeans(mu1)), type="l" , xlim=c(0,13) , ylim=c(-15,15) , xlab="age" ,
ylab="weight difference (boys-girls)" )
for ( p in c(0.5,0.67,0.89,0.99) ) # credibility intervals
shade( apply(mu_contrast,2,PI,prob=p) , seq )
abline(h=0,lty=2,lwd=2)
library(rethinking)
library(dagitty)
dag_q1 <- dagitty('dag{ W <- A -> H -> W }')
drawdag( dag_q1 )
impliedConditionalIndependencies(dag_q1)
#There are no conditional independence, so there is no output to display
data(Howell1)
d <- Howell1
children <- d[ d$age < 13 , ]
plot( children$weight ~ children$age )
# taking an idea of the relation between age and weight
N <- 100
a <- rnorm( N , 12 , 4 )
b1 <- rlnorm( N , 0 , 1 )
# Prior predictive simulation for the weight and age model
plot( NULL , xlim=range(children$age) , ylim=c(-50,50) ,
xlab="age" , ylab="weight" )
abline( h=4 , lty=2, lwd=0.5 )
abline( h=35 , lty=2 , lwd=0.5 )
mtext( "log(b1) ~ dnorm(0,1)" )
xbar <- mean(children$age)
for ( i in 1:N ) curve( a[i] + b1[i]*(x - xbar) ,
from=min(children$age) , to=max(children$age) , add=TRUE ,
col=col.alpha("black",0.2) )
# Posterior distribution for weight and age model
xbar <- mean(children$age)
# fit model
m1a <- quap(
alist(
weight ~ dnorm( mu , sigma ) ,
mu <- a + exp(log_b1)*( age - xbar ) ,
a ~ dnorm( 12 , 4 ) ,
log_b1 ~ dnorm( 0 , 1 ) ,
sigma ~ dunif( 0 , 10 )
) ,
data=children )
precis( m1a )
# the marginal posterior distributions
round( vcov( m1a ) , 3 )
# the variance-covariance matrix
plot( weight ~ age , data=children , col=rangi2 )
post <- extract.samples( m1a )
a_map <- mean(post$a)
b1_map <- exp(mean(post$log_b1))
curve( a_map + b1_map*(x - xbar) , add=TRUE )
plot( children$weight ~ children$height )
# taking an idea of the relation between height and weight
N <- 100
a <- rnorm( N , 12 , 4)
b2 <- rlnorm( N , 0 , 1 )
# Prior predictive simulation for the weight and height model
plot( NULL , xlim=range(children$height) , ylim=c(-50,50) ,
xlab="height" , ylab="weight" )
abline( h=0 , lty=2, lwd=0.5 )
abline( h=35 , lty=2 , lwd=0.5 )
mtext( "log(b2) ~ dnorm(0,1)" )
xbar <- mean(children$height)
for ( i in 1:N ) curve( a[i] + b2[i]*(x - xbar) ,
from=min(children$height) , to=max(children$height) , add=TRUE ,
col=col.alpha("black",0.2) )
# Posterior distribution for weight and height model
xbar <- mean(children$height)
# fit model
m1b <- quap(
alist(
weight ~ dnorm( mu , sigma ) ,
mu <- a + exp(log_b2)*( height - xbar ) ,
a ~ dnorm( 12 , 4 ) ,
log_b2 ~ dnorm( 0 , 1 ) ,
sigma ~ dunif( 0 , 10 )
) ,
data=children )
precis( m1b )
# the marginal posterior distributions
round( vcov( m1b ) , 3 )
# the variance-covariance matrix
plot( weight ~ height , data=children , col=rangi2 )
post <- extract.samples( m1b )
a_map <- mean(post$a)
b2_map <- exp(mean(post$log_b2))
curve( a_map + b2_map*(x - xbar) , add=TRUE )
children$A <- scale( children$age )
children$H <- scale( children$height )
children$W <- scale( children$weight )
#fit models
m1_age <- quap(
alist(
W ~ dnorm( mu , sigma ) ,
mu <- a + bA * A ,
a ~ dnorm( 0 , 0.2 ) ,
bA ~ dnorm( 0 , 0.5 ) ,
sigma ~ dexp( 1 )
) , data = children )
m1_height <- quap(
alist(
W ~ dnorm( mu , sigma ) ,
mu <- a + bH * H ,
a ~ dnorm( 0 , 0.2 ) ,
bH ~ dnorm( 0 , 0.5 ) ,
sigma ~ dexp( 1 )
) , data = children )
m1_all <- quap(
alist(
W ~ dnorm( mu , sigma ) ,
mu <- a + bA*A + bH*H ,
a ~ dnorm( 0 , 0.2 ) ,
bA ~ dnorm( 0 , 0.5 ) ,
bH ~ dnorm( 0 , 0.5 ) ,
sigma ~ dexp( 1 )
) , data = children )
# Visualize results
precis( m1_all )
round( vcov( m1_all ) , 3 )
# the variance-covariance matrix
library(arulesViz)
library(raster)
library(Rgraphviz)
plot( coeftab(m1_age,m1_height,m1_all), par=c("bA","bH") )
